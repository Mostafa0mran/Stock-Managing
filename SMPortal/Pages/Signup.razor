@page "/register"
@inject IUserEndpoint UserEndpoint
@inject NavigationManager NavManager
@inject IAuthenticationService AuthService

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link href="https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,600,700,800,900&display=swap" rel="stylesheet">

    <title>Sixteen Clothing - Sign Up Page</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!--TemplateMo 546 Sixteen Clothing https://templatemo.com/tm-546-sixteen-clothing-->

    <!-- Additional CSS Files -->
    <link rel="stylesheet" href="assets/css/fontawesome.css">
    <link rel="stylesheet" href="assets/css/templatemo-sixteen.css">
    <link rel="stylesheet" href="assets/css/owl.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  </head>

  <body class="bg-custom-signup">

    <!-- ***** Preloader Start ***** -->
    <div id="preloader">
        <div class="jumper">
            <div></div>
            <div></div>
            <div></div>
        </div>
    </div>  
    <!-- ***** Preloader End ***** -->

    <!-- Header -->
    <header class="">
      <nav class="navbar navbar-expand-lg">
        <div class="container">
          <a class="navbar-brand" href="/index"><h2>Sixteen <em>Clothing</em></h2></a>
          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarResponsive">
            <ul class="navbar-nav ml-auto">
              <li class="nav-item">
                <a class="nav-link" href="/index">Home
                  <span class="sr-only">(current)</span>
                </a>
              </li>
            <li class="nav-item">
                <a class="nav-link" href="/products">Our Products</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/about">About Us</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/contact">Contact Us</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/checkout">Checkout</a>
            </li>
            </ul>
          </div>
        </div>
      </nav>
    </header>

    <!-- Sign Up Content -->
    <main class="mx-3">
      <div class="" style="padding: 40px 0;"></div>
      
        <div class="sign-up bg-white shadow p-5 mb-3 bg-body-tertiary">
        <div class="container text-md-start text-center">
          <div class="row">
            <div class="col-md-6">
              <h2 class="mb-5 form-title font-weight-bold">Sign up</h2>
                @if (string.IsNullOrWhiteSpace(errorMessage) == false)
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }
                 <form class="register-form" id="signup-form" @onsubmit="OnValidSubmit">
                    <div class="input-group mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-transparent border-0"><i class="fa fa-user"></i></span>
                        </div>
                        <input name="firstname" type="text" class="form-control rounded-0" placeholder="First Name" required="" @bind-value="model.FirstName">
                        
                    </div>
                    <div class="input-group mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-transparent border-0"><i class="fa fa-user"></i></span>
                        </div>
                         <input name="lastname" type="text" class="form-control rounded-0" placeholder="Last Name" required="" @bind-value="model.LastName">
                         
                    </div>
                    <div class="input-group mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-transparent border-0"><i class="fa fa-envelope"></i></span>
                        </div>
                        <input name="email" type="text" class="form-control rounded-0" placeholder="Your Email" required="" @bind-value="model.EmailAddress">
                        
                    </div>
                    <div class="input-group mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-transparent border-0"><i class="fa fa-lock"></i></span>
                        </div>
                        <input name="password" type="password" class="form-control rounded-0" placeholder="Password" required="" @bind-value="model.Password">
                        
                    </div>
                    <div class="input-group mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-transparent border-0"><i class="fa fa-lock"></i></span>
                        </div>
                        <input name="password" type="password" class="form-control rounded-0" placeholder="Confirm password" required="" @bind-value="model.ConfirmPassword">
                        
                    </div>
                    <div class="input-group mb-4">
                        <div class="text-left ml-2">
                            <p> By clicking Register you agree to all statements in Terms of service</p>
                        </div>
                    </div>
                    <div class="form-button mt-5">
                        <button type="submit" id="form-submit" class="filled-button">Register</button>
                    </div>
                </form>
            </div>
            <div class="col-md-6 text-center">
              <img src="./assets/images/signup-image.jpg" class="img-fluid" alt="Placeholder image">
              <p class="mt-5"><a href="/login.html">I am already member</a></p>
            </div>
          </div>
        </div>
      </div>
    </main>

    <div class="" style="padding-bottom: 40px;"></div>
    
      <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js" suppress-error="BL9992"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js" suppress-error="BL9992"></script>
  
  
      <!-- Additional Scripts -->
    <script src="assets/js/custom.js" suppress-error="BL9992"></script>
    <script src="assets/js/owl.js" suppress-error="BL9992"></script>
    <script src="assets/js/slick.js" suppress-error="BL9992"></script>
      <script src="assets/js/isotope.js"suppress-error="BL9992"></script>
    <script src="assets/js/accordions.js" suppress-error="BL9992"></script>


    <script language="text/Javascript" suppress-error="BL9992">

                cleared[0] = cleared[1] = cleared[2] = 0; //set a cleared flag for each field
        function clearField(t){                   //declaring the array outside of the
        if(! cleared[t.id]){                      // function makes it static and global
            cleared[t.id] = 1;  // you could use true and false, but that's more typing
            t.value='';         // with more chance of typos
            t.style.color='#fff';
            }
        }
      </script>
  
  
</body>

@code {
    CreateUserModel model = new();
    string errorMessage = "";

    private async Task OnValidSubmit()
    {
        errorMessage = "";

        try
        {
            await UserEndpoint.CreateUser(model);

            AuthenticatedUserModel result = await AuthService.Login(new() {Email = model.EmailAddress, Password = model.Password});

            if (result is not null)
            {
                NavManager.NavigateTo("/index");
            }
            else
            {
                errorMessage = "The user registration worked but there was an error when logging in";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
